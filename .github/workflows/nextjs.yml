name: Deploy Next.js site to Pages

on:
  # Executa em pushs direcionados para o branch principal
  push:
    branches: ["main"]

  # Permite executar este workflow manualmente a partir da aba Actions
  workflow_dispatch:

# Define as permissões do GITHUB_TOKEN para permitir o deployment para o GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permite apenas um deployment simultâneo, pulando execuções na fila entre a execução em progresso e a última na fila.
# No entanto, NÃO cancela execuções em progresso pois queremos permitir que esses deployments de produção sejam concluídos.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detectar gerenciador de pacotes
        id: detect-package-manager
        run: |
          if [ -f "/home/runner/work/library/library/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "/home/runner/work/library/library/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Não foi possível determinar o gerenciador de pacotes"
            exit 1
          fi
      - name: Configurar Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Configurar Pages
        uses: actions/configure-pages@v5
        with:
          # Injeta automaticamente basePath no seu arquivo de configuração do Next.js e desabilita
          # a otimização de imagem do lado do servidor (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # Você pode remover esta linha se quiser gerenciar a configuração por conta própria.
          static_site_generator: next
      - name: Restaurar cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Gera um novo cache sempre que pacotes ou arquivos de origem mudarem.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # Se os arquivos de origem mudaram, mas os pacotes não, reconstrua a partir de um cache anterior.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Instalar dependências
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build com Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Upload de artefato
        uses: actions/upload-pages-artifact@v3
        with:
          path: .next

  # Job de deploy
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy para o GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
